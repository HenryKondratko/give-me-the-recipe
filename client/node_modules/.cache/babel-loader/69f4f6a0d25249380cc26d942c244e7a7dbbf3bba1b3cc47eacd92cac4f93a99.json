{"ast":null,"code":"import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node) {\n  let recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n  if (!Array.isArray(node)) node = [node];\n  return find(test, node, recurse, limit);\n}\n/**\n * Search an array of node and its children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n  const result = [];\n  for (const elem of nodes) {\n    if (test(elem)) {\n      result.push(elem);\n      if (--limit <= 0) break;\n    }\n    if (recurse && hasChildren(elem) && elem.children.length > 0) {\n      const children = find(test, elem.children, recurse, limit);\n      result.push(...children);\n      limit -= children.length;\n      if (limit <= 0) break;\n    }\n  }\n  return result;\n}\n/**\n * Finds the first element inside of an array that matches a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n  return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first child node that passes `test`.\n */\nexport function findOne(test, nodes) {\n  let recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let elem = null;\n  for (let i = 0; i < nodes.length && !elem; i++) {\n    const checked = nodes[i];\n    if (!isTag(checked)) {\n      continue;\n    } else if (test(checked)) {\n      elem = checked;\n    } else if (recurse && checked.children.length > 0) {\n      elem = findOne(test, checked.children, true);\n    }\n  }\n  return elem;\n}\n/**\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n  return nodes.some(checked => isTag(checked) && (test(checked) || checked.children.length > 0 && existsOne(test, checked.children)));\n}\n/**\n * Search and array of nodes and its children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n  var _a;\n  const result = [];\n  const stack = nodes.filter(isTag);\n  let elem;\n  while (elem = stack.shift()) {\n    const children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(isTag);\n    if (children && children.length > 0) {\n      stack.unshift(...children);\n    }\n    if (test(elem)) result.push(elem);\n  }\n  return result;\n}","map":{"version":3,"names":["isTag","hasChildren","filter","test","node","recurse","arguments","length","undefined","limit","Infinity","Array","isArray","find","nodes","result","elem","push","children","findOneChild","findOne","i","checked","existsOne","some","findAll","stack","shift","_a","unshift"],"sources":["https://raw.githubusercontent.com/fb55/domutils/f7e357b5c210b6731c2a60e0b7b3cfaa1f96b706/src/querying.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}