{"ast":null,"code":"/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _WaitTask_world, _WaitTask_polling, _WaitTask_root, _WaitTask_fn, _WaitTask_args, _WaitTask_timeout, _WaitTask_result, _WaitTask_poller, _TaskManager_tasks;\nimport { createDeferredPromise } from '../util/DeferredPromise.js';\nimport { stringifyFunction } from '../util/Function.js';\nimport { TimeoutError } from './Errors.js';\nimport { LazyArg } from './LazyArg.js';\n/**\n * @internal\n */\nexport class WaitTask {\n  constructor(world, options, fn) {\n    _WaitTask_world.set(this, void 0);\n    _WaitTask_polling.set(this, void 0);\n    _WaitTask_root.set(this, void 0);\n    _WaitTask_fn.set(this, void 0);\n    _WaitTask_args.set(this, void 0);\n    _WaitTask_timeout.set(this, void 0);\n    _WaitTask_result.set(this, createDeferredPromise());\n    _WaitTask_poller.set(this, void 0);\n    __classPrivateFieldSet(this, _WaitTask_world, world, \"f\");\n    __classPrivateFieldSet(this, _WaitTask_polling, options.polling, \"f\");\n    __classPrivateFieldSet(this, _WaitTask_root, options.root, \"f\");\n    switch (typeof fn) {\n      case 'string':\n        __classPrivateFieldSet(this, _WaitTask_fn, `() => {return (${fn});}`, \"f\");\n        break;\n      default:\n        __classPrivateFieldSet(this, _WaitTask_fn, stringifyFunction(fn), \"f\");\n        break;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    __classPrivateFieldSet(this, _WaitTask_args, args, \"f\");\n    __classPrivateFieldGet(this, _WaitTask_world, \"f\").taskManager.add(this);\n    if (options.timeout) {\n      __classPrivateFieldSet(this, _WaitTask_timeout, setTimeout(() => {\n        this.terminate(new TimeoutError(`Waiting failed: ${options.timeout}ms exceeded`));\n      }, options.timeout), \"f\");\n    }\n    this.rerun();\n  }\n  get result() {\n    return __classPrivateFieldGet(this, _WaitTask_result, \"f\");\n  }\n  async rerun() {\n    try {\n      switch (__classPrivateFieldGet(this, _WaitTask_polling, \"f\")) {\n        case 'raf':\n          __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, \"f\").evaluateHandle(function (_ref, fn) {\n            let {\n              RAFPoller,\n              createFunction\n            } = _ref;\n            for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n              args[_key2 - 2] = arguments[_key2];\n            }\n            const fun = createFunction(fn);\n            return new RAFPoller(() => {\n              return fun(...args);\n            });\n          }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), __classPrivateFieldGet(this, _WaitTask_fn, \"f\"), ...__classPrivateFieldGet(this, _WaitTask_args, \"f\")), \"f\");\n          break;\n        case 'mutation':\n          __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, \"f\").evaluateHandle(function (_ref2, root, fn) {\n            let {\n              MutationPoller,\n              createFunction\n            } = _ref2;\n            for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n              args[_key3 - 3] = arguments[_key3];\n            }\n            const fun = createFunction(fn);\n            return new MutationPoller(() => {\n              return fun(...args);\n            }, root || document);\n          }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), __classPrivateFieldGet(this, _WaitTask_root, \"f\"), __classPrivateFieldGet(this, _WaitTask_fn, \"f\"), ...__classPrivateFieldGet(this, _WaitTask_args, \"f\")), \"f\");\n          break;\n        default:\n          __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, \"f\").evaluateHandle(function (_ref3, ms, fn) {\n            let {\n              IntervalPoller,\n              createFunction\n            } = _ref3;\n            for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n              args[_key4 - 3] = arguments[_key4];\n            }\n            const fun = createFunction(fn);\n            return new IntervalPoller(() => {\n              return fun(...args);\n            }, ms);\n          }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), __classPrivateFieldGet(this, _WaitTask_polling, \"f\"), __classPrivateFieldGet(this, _WaitTask_fn, \"f\"), ...__classPrivateFieldGet(this, _WaitTask_args, \"f\")), \"f\");\n          break;\n      }\n      await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").evaluate(poller => {\n        poller.start();\n      });\n      const result = await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").evaluateHandle(poller => {\n        return poller.result();\n      });\n      __classPrivateFieldGet(this, _WaitTask_result, \"f\").resolve(result);\n      await this.terminate();\n    } catch (error) {\n      const badError = this.getBadError(error);\n      if (badError) {\n        await this.terminate(badError);\n      }\n    }\n  }\n  async terminate(error) {\n    __classPrivateFieldGet(this, _WaitTask_world, \"f\").taskManager.delete(this);\n    if (__classPrivateFieldGet(this, _WaitTask_timeout, \"f\")) {\n      clearTimeout(__classPrivateFieldGet(this, _WaitTask_timeout, \"f\"));\n    }\n    if (error && !__classPrivateFieldGet(this, _WaitTask_result, \"f\").finished()) {\n      __classPrivateFieldGet(this, _WaitTask_result, \"f\").reject(error);\n    }\n    if (__classPrivateFieldGet(this, _WaitTask_poller, \"f\")) {\n      try {\n        await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").evaluateHandle(async poller => {\n          await poller.stop();\n        });\n        if (__classPrivateFieldGet(this, _WaitTask_poller, \"f\")) {\n          await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").dispose();\n          __classPrivateFieldSet(this, _WaitTask_poller, undefined, \"f\");\n        }\n      } catch {\n        // Ignore errors since they most likely come from low-level cleanup.\n      }\n    }\n  }\n  /**\n   * Not all errors lead to termination. They usually imply we need to rerun the task.\n   */\n  getBadError(error) {\n    if (error instanceof Error) {\n      // When frame is detached the task should have been terminated by the IsolatedWorld.\n      // This can fail if we were adding this task while the frame was detached,\n      // so we terminate here instead.\n      if (error.message.includes('Execution context is not available in detached frame')) {\n        return new Error('Waiting failed: Frame detached');\n      }\n      // When the page is navigated, the promise is rejected.\n      // We will try again in the new execution context.\n      if (error.message.includes('Execution context was destroyed')) {\n        return;\n      }\n      // We could have tried to evaluate in a context which was already\n      // destroyed.\n      if (error.message.includes('Cannot find context with specified id')) {\n        return;\n      }\n    }\n    return error;\n  }\n}\n_WaitTask_world = new WeakMap(), _WaitTask_polling = new WeakMap(), _WaitTask_root = new WeakMap(), _WaitTask_fn = new WeakMap(), _WaitTask_args = new WeakMap(), _WaitTask_timeout = new WeakMap(), _WaitTask_result = new WeakMap(), _WaitTask_poller = new WeakMap();\n/**\n * @internal\n */\nexport class TaskManager {\n  constructor() {\n    _TaskManager_tasks.set(this, new Set());\n  }\n  add(task) {\n    __classPrivateFieldGet(this, _TaskManager_tasks, \"f\").add(task);\n  }\n  delete(task) {\n    __classPrivateFieldGet(this, _TaskManager_tasks, \"f\").delete(task);\n  }\n  terminateAll(error) {\n    for (const task of __classPrivateFieldGet(this, _TaskManager_tasks, \"f\")) {\n      task.terminate(error);\n    }\n    __classPrivateFieldGet(this, _TaskManager_tasks, \"f\").clear();\n  }\n  async rerunAll() {\n    await Promise.all([...__classPrivateFieldGet(this, _TaskManager_tasks, \"f\")].map(task => {\n      return task.rerun();\n    }));\n  }\n}\n_TaskManager_tasks = new WeakMap();","map":{"version":3,"names":["createDeferredPromise","stringifyFunction","TimeoutError","LazyArg","WaitTask","constructor","world","options","fn","_WaitTask_world","set","_WaitTask_polling","_WaitTask_root","_WaitTask_fn","_WaitTask_args","_WaitTask_timeout","_WaitTask_result","_WaitTask_poller","__classPrivateFieldSet","polling","root","_len","arguments","length","args","Array","_key","__classPrivateFieldGet","taskManager","add","timeout","setTimeout","terminate","rerun","result","evaluateHandle","_ref","RAFPoller","createFunction","_len2","_key2","fun","create","context","puppeteerUtil","_ref2","MutationPoller","_len3","_key3","document","_ref3","ms","IntervalPoller","_len4","_key4","evaluate","poller","start","resolve","error","badError","getBadError","delete","clearTimeout","finished","reject","stop","dispose","undefined","Error","message","includes","TaskManager","_TaskManager_tasks","Set","task","terminateAll","clear","rerunAll","Promise","all","map"],"sources":["../../../../src/common/WaitTask.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAAQA,qBAAqB,QAAO,4BAA4B;AAChE,SAAQC,iBAAiB,QAAO,qBAAqB;AAErD,SAAQC,YAAY,QAAO,aAAa;AAExC,SAAQC,OAAO,QAAO,cAAc;AAYpC;;;AAGA,OAAM,MAAOC,QAAQ;EAcnBC,YACEC,KAAoB,EACpBC,OAAwB,EACxBC,EAAiD,EAC/B;IAjBpBC,eAAA,CAAAC,GAAA;IACAC,iBAAA,CAAAD,GAAA;IACAE,cAAA,CAAAF,GAAA;IAEAG,YAAA,CAAAH,GAAA;IACAI,cAAA,CAAAJ,GAAA;IAEAK,iBAAA,CAAAL,GAAA;IAEAM,gBAAA,CAAAN,GAAA,OAAUV,qBAAqB,EAAgB;IAE/CiB,gBAAA,CAAAP,GAAA;IAQEQ,sBAAA,KAAI,EAAAT,eAAA,EAAUH,KAAK;IACnBY,sBAAA,KAAI,EAAAP,iBAAA,EAAYJ,OAAO,CAACY,OAAO;IAC/BD,sBAAA,KAAI,EAAAN,cAAA,EAASL,OAAO,CAACa,IAAI;IAEzB,QAAQ,OAAOZ,EAAE;MACf,KAAK,QAAQ;QACXU,sBAAA,KAAI,EAAAL,YAAA,EAAO,kBAAkBL,EAAE,KAAK;QACpC;MACF;QACEU,sBAAA,KAAI,EAAAL,YAAA,EAAOZ,iBAAiB,CAACO,EAAE,CAAC;QAChC;IAAM;IACT,SAAAa,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAbEC,IAAe,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAfF,IAAe,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAclBR,sBAAA,KAAI,EAAAJ,cAAA,EAASU,IAAI;IAEjBG,sBAAA,KAAI,EAAAlB,eAAA,MAAO,CAACmB,WAAW,CAACC,GAAG,CAAC,IAAI,CAAC;IAEjC,IAAItB,OAAO,CAACuB,OAAO,EAAE;MACnBZ,sBAAA,KAAI,EAAAH,iBAAA,EAAYgB,UAAU,CAAC,MAAK;QAC9B,IAAI,CAACC,SAAS,CACZ,IAAI9B,YAAY,CAAC,mBAAmBK,OAAO,CAACuB,OAAO,aAAa,CAAC,CAClE;MACH,CAAC,EAAEvB,OAAO,CAACuB,OAAO,CAAC;;IAGrB,IAAI,CAACG,KAAK,EAAE;EACd;EAEA,IAAIC,MAAMA,CAAA;IACR,OAAOP,sBAAA,KAAI,EAAAX,gBAAA,MAAQ;EACrB;EAEA,MAAMiB,KAAKA,CAAA;IACT,IAAI;MACF,QAAQN,sBAAA,KAAI,EAAAhB,iBAAA,MAAS;QACnB,KAAK,KAAK;UACRO,sBAAA,KAAI,EAAAD,gBAAA,EAAW,MAAMU,sBAAA,KAAI,EAAAlB,eAAA,MAAO,CAAC0B,cAAc,CAC7C,UAAAC,IAAA,EAA8B5B,EAAE,EAAa;YAAA,IAA5C;cAAC6B,SAAS;cAAEC;YAAc,CAAC,GAAAF,IAAA;YAAA,SAAAG,KAAA,GAAAjB,SAAA,CAAAC,MAAA,EAASC,IAAI,OAAAC,KAAA,CAAAc,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;cAAJhB,IAAI,CAAAgB,KAAA,QAAAlB,SAAA,CAAAkB,KAAA;YAAA;YACvC,MAAMC,GAAG,GAAGH,cAAc,CAAC9B,EAAE,CAAC;YAC9B,OAAO,IAAI6B,SAAS,CAAC,MAAK;cACxB,OAAOI,GAAG,CAAC,GAAGjB,IAAI,CAAe;YACnC,CAAC,CAAC;UACJ,CAAC,EACDrB,OAAO,CAACuC,MAAM,CAACC,OAAO,IAAG;YACvB,OAAOA,OAAO,CAACC,aAAa;UAC9B,CAAC,CAAC,EACFjB,sBAAA,KAAI,EAAAd,YAAA,MAAI,EACR,GAAGc,sBAAA,KAAI,EAAAb,cAAA,MAAM,CACd;UACD;QACF,KAAK,UAAU;UACbI,sBAAA,KAAI,EAAAD,gBAAA,EAAW,MAAMU,sBAAA,KAAI,EAAAlB,eAAA,MAAO,CAAC0B,cAAc,CAC7C,UAAAU,KAAA,EAAmCzB,IAAI,EAAEZ,EAAE,EAAa;YAAA,IAAvD;cAACsC,cAAc;cAAER;YAAc,CAAC,GAAAO,KAAA;YAAA,SAAAE,KAAA,GAAAzB,SAAA,CAAAC,MAAA,EAAeC,IAAI,OAAAC,KAAA,CAAAsB,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;cAAJxB,IAAI,CAAAwB,KAAA,QAAA1B,SAAA,CAAA0B,KAAA;YAAA;YAClD,MAAMP,GAAG,GAAGH,cAAc,CAAC9B,EAAE,CAAC;YAC9B,OAAO,IAAIsC,cAAc,CAAC,MAAK;cAC7B,OAAOL,GAAG,CAAC,GAAGjB,IAAI,CAAe;YACnC,CAAC,EAAEJ,IAAI,IAAI6B,QAAQ,CAAC;UACtB,CAAC,EACD9C,OAAO,CAACuC,MAAM,CAACC,OAAO,IAAG;YACvB,OAAOA,OAAO,CAACC,aAAa;UAC9B,CAAC,CAAC,EACFjB,sBAAA,KAAI,EAAAf,cAAA,MAAM,EACVe,sBAAA,KAAI,EAAAd,YAAA,MAAI,EACR,GAAGc,sBAAA,KAAI,EAAAb,cAAA,MAAM,CACd;UACD;QACF;UACEI,sBAAA,KAAI,EAAAD,gBAAA,EAAW,MAAMU,sBAAA,KAAI,EAAAlB,eAAA,MAAO,CAAC0B,cAAc,CAC7C,UAAAe,KAAA,EAAmCC,EAAE,EAAE3C,EAAE,EAAa;YAAA,IAArD;cAAC4C,cAAc;cAAEd;YAAc,CAAC,GAAAY,KAAA;YAAA,SAAAG,KAAA,GAAA/B,SAAA,CAAAC,MAAA,EAAaC,IAAI,OAAAC,KAAA,CAAA4B,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;cAAJ9B,IAAI,CAAA8B,KAAA,QAAAhC,SAAA,CAAAgC,KAAA;YAAA;YAChD,MAAMb,GAAG,GAAGH,cAAc,CAAC9B,EAAE,CAAC;YAC9B,OAAO,IAAI4C,cAAc,CAAC,MAAK;cAC7B,OAAOX,GAAG,CAAC,GAAGjB,IAAI,CAAe;YACnC,CAAC,EAAE2B,EAAE,CAAC;UACR,CAAC,EACDhD,OAAO,CAACuC,MAAM,CAACC,OAAO,IAAG;YACvB,OAAOA,OAAO,CAACC,aAAa;UAC9B,CAAC,CAAC,EACFjB,sBAAA,KAAI,EAAAhB,iBAAA,MAAS,EACbgB,sBAAA,KAAI,EAAAd,YAAA,MAAI,EACR,GAAGc,sBAAA,KAAI,EAAAb,cAAA,MAAM,CACd;UACD;MAAM;MAGV,MAAMa,sBAAA,KAAI,EAAAV,gBAAA,MAAQ,CAACsC,QAAQ,CAACC,MAAM,IAAG;QACnCA,MAAM,CAACC,KAAK,EAAE;MAChB,CAAC,CAAC;MAEF,MAAMvB,MAAM,GAAG,MAAMP,sBAAA,KAAI,EAAAV,gBAAA,MAAQ,CAACkB,cAAc,CAACqB,MAAM,IAAG;QACxD,OAAOA,MAAM,CAACtB,MAAM,EAAE;MACxB,CAAC,CAAC;MACFP,sBAAA,KAAI,EAAAX,gBAAA,MAAQ,CAAC0C,OAAO,CAACxB,MAAM,CAAC;MAE5B,MAAM,IAAI,CAACF,SAAS,EAAE;KACvB,CAAC,OAAO2B,KAAK,EAAE;MACd,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACF,KAAK,CAAC;MACxC,IAAIC,QAAQ,EAAE;QACZ,MAAM,IAAI,CAAC5B,SAAS,CAAC4B,QAAQ,CAAC;;;EAGpC;EAEA,MAAM5B,SAASA,CAAC2B,KAAe;IAC7BhC,sBAAA,KAAI,EAAAlB,eAAA,MAAO,CAACmB,WAAW,CAACkC,MAAM,CAAC,IAAI,CAAC;IAEpC,IAAInC,sBAAA,KAAI,EAAAZ,iBAAA,MAAS,EAAE;MACjBgD,YAAY,CAACpC,sBAAA,KAAI,EAAAZ,iBAAA,MAAS,CAAC;;IAG7B,IAAI4C,KAAK,IAAI,CAAChC,sBAAA,KAAI,EAAAX,gBAAA,MAAQ,CAACgD,QAAQ,EAAE,EAAE;MACrCrC,sBAAA,KAAI,EAAAX,gBAAA,MAAQ,CAACiD,MAAM,CAACN,KAAK,CAAC;;IAG5B,IAAIhC,sBAAA,KAAI,EAAAV,gBAAA,MAAQ,EAAE;MAChB,IAAI;QACF,MAAMU,sBAAA,KAAI,EAAAV,gBAAA,MAAQ,CAACkB,cAAc,CAAC,MAAMqB,MAAM,IAAG;UAC/C,MAAMA,MAAM,CAACU,IAAI,EAAE;QACrB,CAAC,CAAC;QACF,IAAIvC,sBAAA,KAAI,EAAAV,gBAAA,MAAQ,EAAE;UAChB,MAAMU,sBAAA,KAAI,EAAAV,gBAAA,MAAQ,CAACkD,OAAO,EAAE;UAC5BjD,sBAAA,KAAI,EAAAD,gBAAA,EAAWmD,SAAS;;OAE3B,CAAC,MAAM;QACN;MAAA;;EAGN;EAEA;;;EAGAP,WAAWA,CAACF,KAAc;IACxB,IAAIA,KAAK,YAAYU,KAAK,EAAE;MAC1B;MACA;MACA;MACA,IACEV,KAAK,CAACW,OAAO,CAACC,QAAQ,CACpB,sDAAsD,CACvD,EACD;QACA,OAAO,IAAIF,KAAK,CAAC,gCAAgC,CAAC;;MAGpD;MACA;MACA,IAAIV,KAAK,CAACW,OAAO,CAACC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;QAC7D;;MAGF;MACA;MACA,IAAIZ,KAAK,CAACW,OAAO,CAACC,QAAQ,CAAC,uCAAuC,CAAC,EAAE;QACnE;;;IAIJ,OAAOZ,KAAK;EACd;;;AAGF;;;AAGA,OAAM,MAAOa,WAAW;EAAxBnE,YAAA;IACEoE,kBAAA,CAAA/D,GAAA,OAAwB,IAAIgE,GAAG,EAAY;EAwB7C;EAtBE7C,GAAGA,CAAC8C,IAAmB;IACrBhD,sBAAA,KAAI,EAAA8C,kBAAA,MAAO,CAAC5C,GAAG,CAAC8C,IAAI,CAAC;EACvB;EAEAb,MAAMA,CAACa,IAAmB;IACxBhD,sBAAA,KAAI,EAAA8C,kBAAA,MAAO,CAACX,MAAM,CAACa,IAAI,CAAC;EAC1B;EAEAC,YAAYA,CAACjB,KAAa;IACxB,KAAK,MAAMgB,IAAI,IAAIhD,sBAAA,KAAI,EAAA8C,kBAAA,MAAO,EAAE;MAC9BE,IAAI,CAAC3C,SAAS,CAAC2B,KAAK,CAAC;;IAEvBhC,sBAAA,KAAI,EAAA8C,kBAAA,MAAO,CAACI,KAAK,EAAE;EACrB;EAEA,MAAMC,QAAQA,CAAA;IACZ,MAAMC,OAAO,CAACC,GAAG,CACf,CAAC,GAAGrD,sBAAA,KAAI,EAAA8C,kBAAA,MAAO,CAAC,CAACQ,GAAG,CAACN,IAAI,IAAG;MAC1B,OAAOA,IAAI,CAAC1C,KAAK,EAAE;IACrB,CAAC,CAAC,CACH;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}